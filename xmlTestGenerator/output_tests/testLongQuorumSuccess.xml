<test_method name="testLongQuorumSuccess">
	<statement>ServerList serverList = new ServerList("1:one");</statement>
	<statement>RemoteInstanceRequestClient mockClient = new RemoteInstanceRequestClient() {

    @Override
    public void close() throws IOException {
    }

    @Override
    public <T> T getWebResource(URI remoteUri, MediaType type, Class<T> clazz) throws Exception {
        throw new Exception();
    }
};</statement>
	<statement>ActivityLog log = new ActivityLog(100);</statement>
	<statement>ActivityQueue activityQueue = new ActivityQueue();</statement>
	<statement>Exhibitor mockExhibitor = Mockito.mock(Exhibitor.class);</statement>
	<statement>MonitorRunningInstance mockMonitorRunningInstance = makeMockMonitorRunningInstance();</statement>
	<methodCall>Mockito.when(mockExhibitor.getMonitorRunningInstance()).thenReturn(mockMonitorRunningInstance)</methodCall>
	<methodCall>Mockito.when(mockExhibitor.getLog()).thenReturn(log)</methodCall>
	<methodCall>Mockito.when(mockExhibitor.getActivityQueue()).thenReturn(activityQueue)</methodCall>
	<methodCall>Mockito.when(mockExhibitor.getThisJVMHostname()).thenReturn("one")</methodCall>
	<methodCall>Mockito.when(mockExhibitor.getRemoteInstanceRequestClient()).thenReturn(mockClient)</methodCall>
	<statement>ConfigProvider provider = new ConfigWrapper(new AtomicLong(1));</statement>
	<statement>Properties properties = new Properties();</statement>
	<methodCall>properties.setProperty(PropertyBasedInstanceConfig.toName(StringConfigs.SERVERS_SPEC, PropertyBasedInstanceConfig.ROOT_PROPERTY_PREFIX), serverList.toSpecString())</methodCall>
	<methodCall>properties.setProperty(PropertyBasedInstanceConfig.toName(StringConfigs.SERVERS_SPEC, PropertyBasedInstanceConfig.ROLLING_PROPERTY_PREFIX), serverList.toSpecString())</methodCall>
	<methodCall>properties.setProperty(PropertyBasedInstanceConfig.PROPERTY_ROLLING_HOSTNAMES, "one")</methodCall>
	<methodCall>properties.setProperty(PropertyBasedInstanceConfig.PROPERTY_ROLLING_HOSTNAMES_INDEX, "0")</methodCall>
	<statement>PropertyBasedInstanceConfig config = new PropertyBasedInstanceConfig(properties, DefaultProperties.get(null));</statement>
	<methodCall>provider.storeConfig(config, 0)</methodCall>
	<statement>final int MAX_ATTEMPTS = 3;</statement>
	<statement>ConfigManager manager = new ConfigManager(mockExhibitor, provider, 10, MAX_ATTEMPTS);</statement>
	<methodCall>manager.start()</methodCall>
	<try>
	<statement>InstanceState instanceState = new InstanceState(serverList, InstanceStateTypes.NOT_SERVING, new RestartSignificantConfig(null));</statement>
	<loopFor condition="[int i = 0]; i < (MAX_ATTEMPTS - 1); [++i]">
	<methodCall>manager.checkRollingConfig(instanceState)</methodCall>
	<methodCall>Assert.assertTrue(manager.isRolling())</methodCall>
	</loopFor>
	<methodCall>manager.checkRollingConfig(instanceState)</methodCall>
	<methodCall>Assert.assertFalse(manager.isRolling())</methodCall>
		<finally>
	<methodCall>CloseableUtils.closeQuietly(manager)</methodCall>
		</finally>
	</try>
</test_method>
