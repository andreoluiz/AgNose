<test_method name="testTempDownInstance">
	<statement>final AtomicInteger checkMs = new AtomicInteger(10000);</statement>
	<statement>InstanceConfig config = new InstanceConfig() {

    @Override
    public String getString(StringConfigs config) {
        switch(config) {
            case SERVERS_SPEC:
                {
                    return "1:foo,2:bar";
                }
            case ZOOKEEPER_DATA_DIRECTORY:
            case ZOOKEEPER_INSTALL_DIRECTORY:
                {
                    return "/";
                }
        }
        return null;
    }

    @Override
    public int getInt(IntConfigs config) {
        switch(config) {
            case CHECK_MS:
                {
                    return checkMs.get();
                }
        }
        return 0;
    }
};</statement>
	<statement>Exhibitor mockExhibitor = makeMockExhibitor(config, "foo");</statement>
	<statement>final Semaphore semaphore = new Semaphore(0);</statement>
	<statement>MonitorRunningInstance monitor = new MonitorRunningInstance(mockExhibitor) {

    @Override
    protected void restartZooKeeper(InstanceState currentInstanceState) throws Exception {
        semaphore.release();
    }
};</statement>
	<methodCall>monitor.doWork()</methodCall>
	<methodCall>Assert.assertTrue(semaphore.tryAcquire(10, TimeUnit.SECONDS))</methodCall>
	<methodCall>monitor.doWork()</methodCall>
	<comment> no instance state change, should not try restart</comment>
	<methodCall>Assert.assertFalse(semaphore.tryAcquire(3, TimeUnit.SECONDS))</methodCall>
	<methodCall>checkMs.set(1)</methodCall>
	<comment> should do restart now as 10 times checkMs has elapsed</comment>
	<methodCall>monitor.doWork()</methodCall>
	<methodCall>Assert.assertTrue(semaphore.tryAcquire(10, TimeUnit.SECONDS))</methodCall>
</test_method>
